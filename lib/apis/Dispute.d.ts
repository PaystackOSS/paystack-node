/**
 * Paystack
 * The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.
 *
 * The version of the Paystack Node library: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BaseAPI } from '../runtime';
import { Response } from '../models';
export interface DownloadRequest {
    perPage?: number;
    page?: number;
    status?: string;
    from?: Date;
    to?: Date;
}
export interface EvidenceRequest {
    id: string;
    customer_email: string;
    customer_name: string;
    customer_phone: string;
    service_details: string;
    delivery_address?: string;
    delivery_date?: Date;
}
export interface FetchRequest {
    id: string;
}
export interface ListRequest {
    perPage?: number;
    page?: number;
    status?: string;
    transaction?: string;
    from?: Date;
    to?: Date;
}
export interface ResolveRequest {
    id: string;
    resolution: string;
    message: string;
    refund_amount: string;
    uploaded_filename: string;
    evidence?: number;
}
export interface TransactionRequest {
    id: string;
}
export interface UpdateRequest {
    id: string;
    refund_amount: string;
    uploaded_filename?: string;
}
export interface UploadUrlRequest {
    id: string;
}
/**
 *
 */
export declare class Dispute extends BaseAPI {
    /**
     * Export Disputes
     */
    download(requestParameters: DownloadRequest): Promise<Response>;
    /**
     * Add Evidence
     */
    evidence(requestParameters: EvidenceRequest): Promise<Response>;
    /**
     * Fetch Dispute
     */
    fetch(requestParameters: FetchRequest): Promise<Response>;
    /**
     * List Disputes
     */
    list(requestParameters: ListRequest): Promise<Response>;
    /**
     * Resolve a Dispute
     */
    resolve(requestParameters: ResolveRequest): Promise<Response>;
    /**
     * List Transaction Disputes
     */
    transaction(requestParameters: TransactionRequest): Promise<Response>;
    /**
     * Update Dispute
     */
    update(requestParameters: UpdateRequest): Promise<Response>;
    /**
     * Get Upload URL
     */
    uploadUrl(requestParameters: UploadUrlRequest): Promise<Response>;
}
