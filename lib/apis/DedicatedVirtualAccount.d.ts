/**
 * Paystack
 * The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.
 *
 * The version of the Paystack Node library: 1.0.0
 * Contact: techsupport@paystack.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BaseAPI } from '../runtime';
import { Response } from '../models';
export interface AddSplitRequest {
    account_number: string;
    subaccount?: string;
    split_code?: string;
}
export interface CreateRequest {
    customer: string;
    preferred_bank?: string;
    subaccount?: string;
    split_code?: string;
}
export interface DeactivateRequest {
    account_id: string;
}
export interface FetchRequest {
    account_id: string;
}
export interface ListRequest {
    account_number?: string;
    customer?: string;
    active?: boolean;
    currency?: string;
    provider_slug?: string;
    bank_id?: string;
    perPage?: string;
    page?: string;
}
export interface RemoveSplitRequest {
    account_number: string;
    subaccount?: string;
    split_code?: string;
}
/**
 *
 */
export declare class DedicatedVirtualAccount extends BaseAPI {
    /**
     * Split Dedicated Account Transaction
     */
    addSplit(requestParameters: AddSplitRequest): Promise<Response>;
    /**
     * Fetch Bank Providers
     */
    availableProviders(): Promise<Response>;
    /**
     * Create Dedicated Account
     */
    create(requestParameters: CreateRequest): Promise<Response>;
    /**
     * Deactivate Dedicated Account
     */
    deactivate(requestParameters: DeactivateRequest): Promise<Response>;
    /**
     * Fetch Dedicated Account
     */
    fetch(requestParameters: FetchRequest): Promise<Response>;
    /**
     * List Dedicated Accounts
     */
    list(requestParameters: ListRequest): Promise<Response>;
    /**
     * Remove Split from Dedicated Account
     */
    removeSplit(requestParameters: RemoveSplitRequest): Promise<Response>;
}
